SQL TASK:

Given tables:

tasks (id, name, status, project_id)
projects (id, name)

mysql> USE task
Database changed

mysql>  DESCRIBE projects;
+-------+--------------+------+-----+---------+----------------+
| Field | Type         | Null | Key | Default | Extra          |
+-------+--------------+------+-----+---------+----------------+
| id    | int(11)      | NO   | PRI | NULL    | auto_increment |
| name  | varchar(255) | NO   |     | NULL    |                |
+-------+--------------+------+-----+---------+----------------+
2 rows in set (0.00 sec)

mysql>  DESCRIBE task;
+------------+--------------+------+-----+---------+-------+
| Field      | Type         | Null | Key | Default | Extra |
+------------+--------------+------+-----+---------+-------+
| id         | int(11)      | NO   |     | NULL    |       |
| name       | varchar(255) | NO   |     | NULL    |       |
| status     | varchar(255) | NO   |     | NULL    |       |
| project_id | int(11)      | NO   |     | NULL    |       |
+------------+--------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> SELECT * FROM projects;
+----+-----------------+
| id | name            |
+----+-----------------+
|  1 | project_ruby    |
|  2 | project_android |
|  3 | project_c++     |
|  4 | project_ios     |
+----+-----------------+
4 rows in set (0.00 sec)

mysql> SELECT * FROM task;
+----+------------------------+------------+------------+
| id | name                   | status     | project_id |
+----+------------------------+------------+------------+
|  1 | project_ruby           | created    |          1 |
|  2 | project_ruby           | in work    |          1 |
|  3 | project_ruby           | completed  |          1 |
|  4 | project_ruby           | rejected   |          1 |
|  5 | project_android        | created    |          2 |
|  6 | project_android        | in work    |          2 |
|  7 | project_android        | completed  |          2 |
|  8 | project_android        | rejected   |          2 |
|  9 | project_c++            | created    |          3 |
| 10 | project_c++            | in work    |          3 |
| 11 | project_c++            | completed  |          3 |
| 12 | project_c++            | rejected   |          3 |
| 13 | project_ios            | created    |          4 |
| 14 | project_ios            | in work    |          4 |
| 15 | project_ios            | completed  |          4 |
| 16 | project_ios            | rejected   |          4 |
| 17 | project_ios_start      | created    |          4 |
| 18 | project_ios_run        | in work    |          4 |
| 19 | project_ios_fin        | completed  |          4 |
| 20 | project_ios_bag2       | rejected   |          4 |
| 21 | project_ios_bag        | rejected   |          4 |
| 22 | project_ios_start1     | created    |          4 |
| 23 | project_ios_run        | in work    |          4 |
| 24 | project_ios_fin2       | completed  |          4 |
| 25 | project_ruby_start     | created    |          1 |
| 26 | project_ruby_run       | in work    |          1 |
| 27 | project_ruby_fin       | completed  |          1 |
| 28 | project_ruby_bag2      | rejected   |          1 |
| 29 | project_ruby_bag       | rejected   |          1 |
| 30 | project_ruby_start1    | created    |          1 |
| 31 | project_ruby_run       | in work    |          1 |
| 32 | project_ruby_fin2      | completed  |          1 |
| 33 | project_android_start  | created    |          2 |
| 34 | project_android_run    | in work    |          2 |
| 35 | project_android_fin    | completed  |          2 |
| 36 | project_android_bag2   | rejected   |          2 |
| 37 | project_android_bag    | rejected   |          2 |
| 38 | project_android_start2 | created    |          2 |
| 39 | project_android_run2   | in work    |          2 |
| 40 | project_android_fin2   | completed  |          2 |
| 41 | project_c++_start      | created    |          3 |
| 42 | project_c++_run        | in work    |          3 |
| 43 | project_c++_fin        | completed  |          3 |
| 44 | project_c++_bag3       | rejected   |          3 |
| 45 | project_c++_bag        | rejected   |          3 |
| 46 | project_c++_start3     | created    |          3 |
| 47 | project_c++_run        | in work    |          3 |
| 48 | project_c++_fin3       | completed  |          3 |
| 49 | Garage                 | in work    |          5 |
| 50 | Garage                 | completed  |          5 |
+----+------------------------+------------+------------+
50 rows in set (0.00 sec)

----------------------------
1. get all statuses, not repeating, alphabetically ordered

mysql> select DISTINCT status from task ORDER BY status asc;
+------------+
| status     |
+------------+
| completed  |
| created    |
| in work    |
| rejected   |
+------------+
4 rows in set (0.00 sec)

-----------------------------
2. get the count of all tasks in each project, order by tasks count descending
mysql> SELECT COUNT(*) AS total   FROM task   GROUP BY project_id    ORDER BY total DESC;
+-------+
| total |
+-------+
|    12 |
|    12 |
|    12 |
|    12 |
+-------+
4 rows in set (0.00 sec

-----------------------------
3. get the count of all tasks in each project, order by projects names 
mysql> SELECT COUNT(*) AS amount, projects.name FROM task INNER JOIN projects ON project_id = projects.id GROUP BY projects.name ORDER BY projects.name ASC;
+--------+-----------------+
| amount | name            |
+--------+-----------------+
|     12 | project_android |
|     12 | project_c++     |
|     12 | project_ios     |
|     12 | project_ruby    |
+--------+-----------------+
4 rows in set (0.00 sec)

-----------------------------
4. get the tasks for all projects having the name beginning with “N” letter
mysql> SELECT * FROM task WHERE name like 'N%';
Empty set (0.00 sec)

-----------------------------
5. get the list of all projects containing the ‘a’ letter in the middle of the name, and show the
tasks count near each project. Mention that there can exist projects without tasks and
tasks with project_id=NULL

mysql> SELECT projects.name, COUNT(task.id)   FROM projects RIGHT JOIN task ON projects.id = project_id   WHERE projects.name LIKE '_%a%_'   GROUP BY projects.name;
+-----------------+----------------+
| name            | COUNT(task.id) |
+-----------------+----------------+
| project_android |             12 |
+-----------------+----------------+
1 row in set (0.00 sec)

-----------------------------
6. get the list of tasks with duplicate names. Order alphabetically

mysql> SELECT task.name, task.id FROM task INNER JOIN (SELECT id, name FROM task GROUP BY name HAVING count(id) > 1) dup  ON task.name = dup.name ORDER BY task.name ;
+------------------+----+
| name             | id |
+------------------+----+
| project_android  |  5 |
| project_android  |  6 |
| project_android  |  7 |
| project_android  |  8 |
| project_c++      |  9 |
| project_c++      | 10 |
| project_c++      | 11 |
| project_c++      | 12 |
| project_c++_run  | 42 |
| project_c++_run  | 47 |
| project_ios      | 13 |
| project_ios      | 14 |
| project_ios      | 15 |
| project_ios      | 16 |
| project_ios_run  | 18 |
| project_ios_run  | 23 |
| project_ruby     |  1 |
| project_ruby     |  2 |
| project_ruby     |  3 |
| project_ruby     |  4 |
| project_ruby_run | 26 |
| project_ruby_run | 31 |
+------------------+----+
22 rows in set (0.00 sec)

-----------------------------
7. get the list of tasks having several exact matches of both name and status, from the
project ‘Garage’. Order by matches count

mysql> SELECT task.name, task.id, task.status   FROM task INNER JOIN (SELECT id, status, name FROM task GROUP BY status HAVING count(id) > 1) dup ON task.status = dup.status  WHERE project_id = (SELECT id FROM projects WHERE name = 'Garage') ORDER BY task.name;
+--------+----+-----------+
| name   | id | status    |
+--------+----+-----------+
| Garage | 49 | in work   |
| Garage | 50 | completed |
+--------+----+-----------+
2 rows in set (0.00 sec)

-----------------------------
8. get the list of project names having more than 10 tasks in status ‘completed’. Order by
project_id

mysql> SELECT projects.name, COUNT(task.id) as count FROM projects RIGHT JOIN task ON projects.id = task.project_id   
       WHERE task.status = 'completed'  GROUP BY projects.name HAVING count > 10   ORDER BY projects.id;

-----------------------------

