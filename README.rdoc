== Welcome to Rails

Full the task of sql is shown in the file - skl_task


1. get all statuses, not repeating, alphabetically ordered

mysql> select DISTINCT status from task ORDER BY status asc;

2. get the count of all tasks in each project, order by tasks count descending

mysql> SELECT COUNT(*) AS total FROM task GROUP BY project_id ORDER BY total DESC;

3. get the count of all tasks in each project, order by projects names

mysql> SELECT COUNT(*) AS amount, projects.name FROM task INNER JOIN projects ON project_id = projects.id GROUP BY projects.name ORDER BY projects.name ASC;

4. get the tasks for all projects having the name beginning with “N” letter

mysql> SELECT * FROM task WHERE name like 'N%';

5. get the list of all projects containing the ‘a’ letter in the middle of the name, and show the
tasks count near each project. Mention that there can exist projects without tasks and
tasks with project_id=NULL

mysql> SELECT projects.name, COUNT(task.id) FROM projects RIGHT JOIN task ON projects.id = project_id WHERE projects.name LIKE '_%a%_' GROUP BY projects.name;

6. get the list of tasks with duplicate names. Order alphabetically

mysql> SELECT task.name, task.id FROM task INNER JOIN (SELECT id, name FROM task GROUP BY name HAVING count(id) > 1) dup ON task.name = dup.name ORDER BY task.name ;

7. get the list of tasks having several exact matches of both name and status, from the
project ‘Garage’. Order by matches count

mysql> SELECT task.name, task.id, task.status FROM task INNER JOIN (SELECT id, status, name FROM task GROUP BY status HAVING count(id) > 1) dup ON task.status = dup.status WHERE project_id = (SELECT id FROM projects WHERE name = 'Garage') ORDER BY task.name;

8. get the list of project names having more than 10 tasks in status ‘completed’. Order by
project_id

mysql> SELECT projects.name, COUNT(task.id) as count FROM projects RIGHT JOIN task ON projects.id = task.project_id
       WHERE task.status = 'completed' GROUP BY projects.name HAVING count > 10 ORDER BY projects.id;

